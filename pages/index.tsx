import Head from 'next/head';
import { useEffect, useState } from 'react';
import styles from '@/styles/Home.module.css';
import WalletLayout from '@/components/wallet/layout/walletLayout';
import WalletContentMobile from '@/components/wallet/walletContentMobile';
import WalletContentDesktop from '@/components/wallet/walletContentDesktop';

export default function Home() {
  const [isHome, setIsHome] = useState<boolean>(false);
  const [isTransactions, setIsTransactions] = useState<boolean>(false);
  const [isContacts, setIsContacts] = useState<boolean>(false);
  const [isProfile, setIsProfile] = useState<boolean>(false);

  const handleIsHome = () => {
    setIsHome(true);
    setIsTransactions(false);
    setIsContacts(false);
    setIsProfile(false);
  };

  const handleIsTransactions = () => {
    setIsTransactions(true);
    setIsHome(false);
    setIsContacts(false);
    setIsProfile(false);
  };

  const handleIsContacts = () => {
    setIsContacts(true);
    setIsHome(false);
    setIsTransactions(false);
    setIsProfile(false);
  };

  const handleIsProfile = () => {
    setIsProfile(true);
    setIsHome(false);
    setIsTransactions(false);
    setIsContacts(false);
  };

  useEffect(() => {
    if (isTransactions) {
      setIsHome(false);
      setIsContacts(false);
      setIsProfile(false);
    } else if (isContacts) {
      setIsHome(false);
      setIsTransactions(false);
      setIsProfile(false);
    } else if (isProfile) {
      setIsHome(false);
      setIsTransactions(false);
      setIsContacts(false);
    } else {
      setIsHome(true);
    }
  }, [
    isContacts,
    isProfile,
    isTransactions,
    setIsHome,
    setIsContacts,
    setIsProfile,
    setIsTransactions,
  ]);
  return (
    <>
      <Head>
        <title>Wallet App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <WalletLayout
        isHome={isHome}
        setIsHome={setIsHome}
        isTransactions={isTransactions}
        setIsTransactions={setIsTransactions}
        isContacts={isContacts}
        setIsContacts={setIsContacts}
        isProfile={isProfile}
        setIsProfile={setIsProfile}
        handleIsHome={handleIsHome}
        handleIsTransactions={handleIsTransactions}
        handleIsContacts={handleIsContacts}
        handleIsProfile={handleIsProfile}
      >
        <div className={styles.walletContentMobile}>
          <WalletContentMobile />
        </div>
        <div className={styles.walletContentDesktop}>
          <WalletContentDesktop
            isHome={isHome}
            setIsHome={setIsHome}
            isTransactions={isTransactions}
            setIsTransactions={setIsTransactions}
            isContacts={isContacts}
            setIsContacts={setIsContacts}
            isProfile={isProfile}
            setIsProfile={setIsProfile}
            handleIsHome={handleIsHome}
            handleIsTransactions={handleIsTransactions}
            handleIsContacts={handleIsContacts}
            handleIsProfile={handleIsProfile}
          />
        </div>
      </WalletLayout>
    </>
  );
}
